CREATE TABLE IF NOT EXISTS PUBLIC."genre" (
ID INTEGER NOT NULL AUTO_INCREMENT,
NAME VARCHAR NOT NULL,
CONSTRAINT NEWTABLE_PK PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC."mpa_rating" (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	NAME VARCHAR NOT NULL,
	CONSTRAINT MPA_RATING_PK PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC."user" (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	EMAIL VARCHAR NOT NULL,
	LOGIN VARCHAR NOT NULL,
	NAME VARCHAR,
	BIRTHDAY DATE NOT NULL,
	CONSTRAINT USER_PK PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC."film" (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	NAME VARCHAR NOT NULL,
	DESCRIPTION VARCHAR(200),
	RELEASE_DATE DATE NOT NULL,
	DURATION INTEGER NOT NULL,
	RATING_ID INTEGER,
	CONSTRAINT FILM_PK PRIMARY KEY (ID),
	CONSTRAINT FILM_MPA_RATING_FK FOREIGN KEY (RATING_ID) REFERENCES PUBLIC."mpa_rating"(ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC."film_genre" (
	FILM_ID INTEGER NOT NULL,
	GENRE_ID INTEGER NOT NULL,
	CONSTRAINT FILM_GENRE_FILM_FK FOREIGN KEY (FILM_ID) REFERENCES PUBLIC."film"(ID),
	CONSTRAINT FILM_GENRE_GENRE_FK FOREIGN KEY (GENRE_ID) REFERENCES PUBLIC."genre"(ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC."user_films" (
	USER_ID INTEGER NOT NULL,
	FILM_ID INTEGER NOT NULL,
	CONSTRAINT USER_FILMS_FILM_FK FOREIGN KEY (FILM_ID) REFERENCES PUBLIC."film"(ID),
	CONSTRAINT USER_FILMS_USER_FK FOREIGN KEY (USER_ID) REFERENCES PUBLIC."user"(ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC."user_friends" (
	USER_ID INTEGER NOT NULL,
	FRIEND_ID INTEGER NOT NULL,
	STATUS BOOLEAN DEFAULT false,
	CONSTRAINT USER_FRIENDS_USER_FK FOREIGN KEY (USER_ID) REFERENCES PUBLIC."user"(ID),
	CONSTRAINT USER_FRIENDS_USER_FK_1 FOREIGN KEY (FRIEND_ID) REFERENCES PUBLIC."user"(ID)
);

MERGE INTO PUBLIC."genre"
KEY(ID, NAME)
VALUES (1, 'Комедия'),
  (2, 'Драма'),
  (3, 'Мультфильм'),
  (4, 'Триллер'),
  (5, 'Документальный'),
  (6, 'Боевик');

MERGE INTO PUBLIC."mpa_rating"
KEY(ID, NAME)
VALUES (1, 'G'),
  (2, 'PG'),
  (3, 'PG-13'),
  (4, 'R'),
  (5, 'NC-17');


